#!/bin/bash

#Directories 
REPO_DIR=$(git rev-parse --show-toplevel)
SRC_DIR=${REPO_DIR}/src
TEST_BASE_DIR=${REPO_DIR}/test

# Path to source file we want to test
SRC_BASENAME=$(basename $1 .c)
SRC_PATH=$(find ${SRC_DIR} -name "${SRC_BASENAME}*.c")
OBJ_PATH=$(find ${REPO_DIR}/build -name ${SRC_BASENAME}.o)

if [ ! -f ${OBJ_PATH} ]; then
  echo "object file $OBJ_PATH doesn't exist. Exiting..."
  exit 1
fi

echo src basename is ${SRC_BASENAME}
echo obj path is $OBJ_PATH
if [ ! -f ${SRC_PATH} ]; then
  echo "source file $SRC_PATH doesn't exist. Exiting..."
  exit 1
fi

# Make the test directory if it doesn't already exist
if [ ! -z "${SRC_PATH}" -a ! -z "${SRC_BASENAME}" ]; then
  # Cut the jollybean repo's src directory out of the destination subdirectory path.
  TRIM_TEST_DIR=$(echo $(dirname "${SRC_PATH}") | sed -n -E "s,${SRC_DIR}/(.*),\1/${SRC_BASENAME},gp")
  if [ ! -z ${TRIM_TEST_DIR} ]; then
    # Prepend jollybean's test directory to the above result.
    TEST_DIR=${TEST_BASE_DIR}/${TRIM_TEST_DIR}
    if [ ! -d ${TEST_DIR} ]; then
      mkdir -p ${TEST_DIR}
    else
      echo "Test path ${TEST_DIR} is invalid. Exiting..."
      exit 1
    fi

    # Get function list
    functionsToTest=($(objdump -t ${OBJ_PATH} | grep -E '^\s*[0-9a-fA-F]+\s.*g.*F.*\.' | grep -o -E -h '[^ ]+\s*$'))

    OUTPUT_FILE="${TEST_DIR}/test.c"

    # Clear any existing test files out of the way.
    rm -f ${OUTPUT_FILE} 2>/dev/null

    # Make functions wrapping the ones being tested.
    echo -e "#include \"${SRC_BASENAME}.h\"\n#include <assert.h>\n" >> ${OUTPUT_FILE}
    for f in ${functionsToTest[*]}; do
      echo -e "Error test_$f() {\n\tassert(FALSE);\n\treturn SUCCESS;\n}\n" >> ${OUTPUT_FILE}
    done

    # Make main function to call all of the above functions.
    echo "int main(int argc, char **argv) {" >> ${OUTPUT_FILE}
    for f in ${functionsToTest[*]}; do
      echo -e "\tassert(test_${f}() == SUCCESS);" >> ${OUTPUT_FILE}
    done
    echo -e "\n\treturn 0;\n}\n" >> $OUTPUT_FILE
    cat $OUTPUT_FILE
    
    # Makefile
    if [ ! -z ${TEST_DIR} ]; then
      # Don't clobber existing Makefiles.
      cp -n ${REPO_DIR}/templates/test_Makefile ${TEST_DIR}/Makefile
    fi
  fi
fi
