#!/bin/bash

export TROVE="${HOME}/jb"

#source ./scripts/ini
source /home/bonbonbaron/hack/jollybean/scripts/sys
#source /home/bonbonbaron/hack/jollybean/scripts/game
#source /home/bonbonbaron/hack/jollybean/scripts/image
#source /home/bonbonbaron/hack/jollybean/scripts/*

function lower () {
  echo $1 | sed 's/.*/\L&/'
}

# First, distribute any items dropped off in the trove.
mv ${TROVE}/*_col.png ${TROVE}/src/Body/Graybody/Collision 2>/dev/null
mv ${TROVE}/*.json ${TROVE}/src/Body/Graybody/Animation 2>/dev/null
mv ${TROVE}/*.{png,ase} ${TROVE}/src/Body/Graybody/Colormap 2>/dev/null

# Second, handle actual user arguments.
if [ $# -gt 0 ]; then
  mainArg=$(lower $1)
  case $mainArg in  
    game) gameExe ${*:2};;
    sys)  sysExe ${*};;
    image|img) imgExe ${*:2};;
    gene) echo "what the del";;
    build) buildExe ${*:2};;
    ini) mkdir -p ${TROVE}/src/Body/{Palette/{Color,Collision},Graybody/{Animation,Collision,Colormap}};;
    *) echo "jb: Command $mainArg not recognized.";;
  esac
fi

# TODO add -g argument for game to specify game; if absent, check env vars for $GAME
# TODO make sure mv'ing imgStrip output to game dir works properly
# TODO make flexible add/rm functions that can handle any gene type
# TODO add function to check for existence of gene files and gene usage; call it in add/rm functions
# TODO if conflict exists, prompt user whether to replace it. 
# TODO add -y to auto-accept replacements of conflicts
# TODO add to/remove from headers
#sed -E "/$a/s/([0-Z ]+=\s*)(\*?[0-Z ]+)(\s*[;,\n].*)/\1$b\3/g" test 
