Trees are unwieldy at the moment; their parts are split across multiple files stored in separate directories. I still agree with that organizational structure, but I need a way to see the whole tree at once and easily change it. But moreover, I need a way to preview what each node does, and which nodes are available to use.

There's also the matter of biomes. I need an easy way to manipulate these as well for the same reason above. 

The obvious route is to build a GUI; this'd risk evolving into a whole game engine GUI. I don't want that; I want to finish the damn engine and start making games. So the less obvious, yet simplest route is to have Python parse a simple text file. Or even have C do it; in fact, I'd eventually like to get rid of all Python functionality altogether in order to make truly portable software. (Scope creep again.) I don't need to do that; I can do that WAY later. I only need to finish the engine itself, which doesn't include the python stuff.  

So the best route to take for Trees is to make a text file parsed by a Python script. 

The best route for biomes is to use TileD's output; it'll auto-determine all graphical entities' positions. For that, [TODO: design biome construction tied with TileD.]


TODO
====
You left off on getting sRun() to loop forever. You'd apparently changed things around; it's trying to trigger reactions from subsystems' outboxes. So in order to move forward, you're going to need to design the interface between trees and subsystems.
