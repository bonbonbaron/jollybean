!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AUDIO	py_defs.py	/^AUDIO  = "audio"$/;"	v
Activity	jb_objects.py	/^class Activity:$/;"	c
AnimSequence	img.py	/^class AnimSequence:$/;"	c
AnimatedSprite	jb_objects.py	/^class AnimatedSprite:$/;"	c
Animation	jb_objects.py	/^class Animation:$/;"	c
AnimationStrip	jb_objects.py	/^class AnimationStrip:$/;"	c
AnimobSprite	jb_objects.py	/^class AnimobSprite:$/;"	c
BYTEORDER	img.py	/^BYTEORDER = "big"  # since that's the order files are written in$/;"	v
BYTEORDER	te.py	/^BYTEORDER = sys.byteorder$/;"	v
Camera	jb_objects.py	/^class Camera:$/;"	c
CommChannel	jb_objects.py	/^class CommChannel:$/;"	c
DATA	te.py	/^DATA = "..\/games\/%s\/data.bin"%(game_name)$/;"	v
DBS	py_defs.py	/^DBS = [SCENE, SPRITE, AUDIO, TEXT, IMAGE]$/;"	v
DELETE	py_defs.py	/^DELETE = 2$/;"	v
END_ROW	py_defs.py	/^END_ROW = "\/* END_ROW_DEFS *\/\\n"$/;"	v
END_TBL	py_defs.py	/^END_TBL = "\/* END_TBL_DEF *\/\\n"$/;"	v
Exit	jb_objects.py	/^class Exit:$/;"	c
Exit	te.py	/^class Exit:$/;"	c
FLIP_DIAG	img.py	/^FLIP_DIAG = 3 << 14$/;"	v
FLIP_LR	img.py	/^FLIP_LR   = 2 << 14$/;"	v
FLIP_NONE	img.py	/^FLIP_NONE = 0$/;"	v
FLIP_UD	img.py	/^FLIP_UD   = 1 << 14$/;"	v
IDX_B	img.py	/^IDX_B                 =  2$/;"	v
IDX_G	img.py	/^IDX_G                 =  1$/;"	v
IDX_R	img.py	/^IDX_R                 =  0$/;"	v
IMAGE	py_defs.py	/^IMAGE  = "image"$/;"	v
IMG_DIR_IDX_LOCATION	img.py	/^IMG_DIR_IDX_LOCATION  = 1$/;"	v
IMG_DIR_IDX_NAME	img.py	/^IMG_DIR_IDX_NAME      = 0$/;"	v
IMG_DIR_IDX_NBR_TILES	img.py	/^IMG_DIR_IDX_NBR_TILES = 2$/;"	v
INCL_GE_H	py_defs.py	/^INCL_GE_H = "#include \\"ge.h\\"\\n"$/;"	v
IS_LINUX	py_defs.py	/^    IS_LINUX = True$/;"	v
IS_LINUX	py_defs.py	/^IS_LINUX = False$/;"	v
IS_WINDOWS	py_defs.py	/^    IS_WINDOWS = True$/;"	v
IS_WINDOWS	py_defs.py	/^IS_WINDOWS = False$/;"	v
ImageInfo	img.py	/^class ImageInfo:$/;"	c
Layer	te.py	/^class Layer:$/;"	c
LemJSONEncoder	te.py	/^class LemJSONEncoder(JSONEncoder):$/;"	c
LerpConsts	jb_objects.py	/^class LerpConsts:$/;"	c
LinkedList	jb_objects.py	/^class LinkedList:$/;"	c
ListNode	jb_objects.py	/^class ListNode:$/;"	c
MERGE	py_defs.py	/^MERGE  = 1$/;"	v
MediaInfo	jb_objects.py	/^class MediaInfo:$/;"	c
MobInfo	jb_objects.py	/^class MobInfo:$/;"	c
Motion	jb_objects.py	/^class Motion:$/;"	c
MotionLerping	jb_objects.py	/^class MotionLerping:$/;"	c
MotionTranslation	jb_objects.py	/^class MotionTranslation:$/;"	c
NBR_COLOR_CHANNELS	img.py	/^NBR_COLOR_CHANNELS    =  3$/;"	v
NULL	py_defs.py	/^NULL = "NULL"$/;"	v
PNG_BITDEPTH_DATA_SZ	img.py	/^PNG_BITDEPTH_DATA_SZ  = 1$/;"	v
PNG_BITDEPTH_LOCATION	img.py	/^PNG_BITDEPTH_LOCATION = 24$/;"	v
PNG_IDATA_LOCATION	img.py	/^PNG_IDATA_LOCATION    = PNG_BITDEPTH_LOCATION + 8$/;"	v
PNG_IDAT_CHUNK_TYPE	img.py	/^PNG_IDAT_CHUNK_TYPE   = bytearray([73, 68, 65, 84])  $/;"	v
PNG_IDAT_END	img.py	/^PNG_IDAT_END          = bytearray("IEND".encode())$/;"	v
PNG_IDAT_START	img.py	/^PNG_IDAT_START        = bytearray("IDAT".encode())$/;"	v
PNG_IEND	img.py	/^PNG_IEND              = bytearray([0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130])$/;"	v
PNG_IEND_LENGTH	img.py	/^PNG_IEND_LENGTH       = 8$/;"	v
PNG_IHDR_START	img.py	/^PNG_IHDR_START        = bytearray([0, 0, 0, 13, 73, 72, 68, 82])$/;"	v
PNG_PLTE_CHUNK_TYPE	img.py	/^PNG_PLTE_CHUNK_TYPE   = bytearray([80, 76, 84, 69])$/;"	v
PNG_SIGNATURE	img.py	/^PNG_SIGNATURE         = bytearray([137, 80, 78, 71, 13, 10, 26, 10])$/;"	v
QuadNode	jb_objects.py	/^class QuadNode:$/;"	c
QuadTree	jb_objects.py	/^class QuadTree:$/;"	c
ReactSeq	jb_objects.py	/^class ReactSeq:$/;"	c
ReactSeqGrp	jb_objects.py	/^class ReactSeqGrp:$/;"	c
ReactSeqGrpOption	jb_objects.py	/^class ReactSeqGrpOption:$/;"	c
SCENE	py_defs.py	/^SCENE = "scene"$/;"	v
SEP	py_defs.py	/^    SEP = "\/"$/;"	v
SEP	py_defs.py	/^    SEP = "\\\\"$/;"	v
SEP	py_defs.py	/^SEP = ""$/;"	v
SPRITE	py_defs.py	/^SPRITE = "sprite"$/;"	v
START_ROW	py_defs.py	/^START_ROW = "\/* START_ROW_DEFS *\/\\n"$/;"	v
START_TBL	py_defs.py	/^START_TBL = "\/* START_TBL_DEF *\/\\n"$/;"	v
Scene	db_py_reps.py	/^class Scene:$/;"	c
Scene	jb_objects.py	/^class Scene:$/;"	c
SceneTableRow	te.py	/^class SceneTableRow:$/;"	c
SceneTblRow	jb_objects.py	/^class SceneTblRow:$/;"	c
Sprite	db_py_reps.py	/^class Sprite:$/;"	c
Sprite	jb_objects.py	/^class Sprite:$/;"	c
Sprite	te.py	/^class Sprite:$/;"	c
Subscriber	jb_objects.py	/^class Subscriber:$/;"	c
TBL_DESC	py_defs.py	/^TBL_DESC = "\/* Idx #, Position array, Orientation array *\/\\n"$/;"	v
TEXT	py_defs.py	/^TEXT   = "text"$/;"	v
TILE_HEIGHT	img.py	/^TILE_HEIGHT           =  8$/;"	v
TILE_SIZE	img.py	/^TILE_SIZE = TILE_WIDTH * TILE_HEIGHT * NBR_COLOR_CHANNELS$/;"	v
TILE_WIDTH	img.py	/^TILE_WIDTH            =  8$/;"	v
TblAnimRow	jb_objects.py	/^class TblAnimRow:$/;"	c
TblCameraRow	jb_objects.py	/^class TblCameraRow:$/;"	c
TblMobileRow	jb_objects.py	/^class TblMobileRow:$/;"	c
TblReactRow	jb_objects.py	/^class TblReactRow:$/;"	c
TblSpriteRow	jb_objects.py	/^class TblSpriteRow:$/;"	c
Vector2	jb_objects.py	/^class Vector2:$/;"	c
Vector3	jb_objects.py	/^class Vector3:$/;"	c
__init__	db_py_reps.py	/^    def __init__(self, name):$/;"	m	class:Scene
__init__	db_py_reps.py	/^    def __init__(self, name):$/;"	m	class:Sprite
__init__	img.py	/^	def __init__(self, length, w, h, bpp, is_tiled, idat):$/;"	m	class:ImageInfo
__init__	img.py	/^    def __init__(self, blit_coords, frame_order, durations, repeat):$/;"	m	class:AnimSequence
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Activity
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:AnimatedSprite
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Animation
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:AnimationStrip
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:AnimobSprite
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Camera
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:CommChannel
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Exit
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:LerpConsts
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:LinkedList
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:ListNode
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:MediaInfo
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:MobInfo
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Motion
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:MotionLerping
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:MotionTranslation
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:QuadNode
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:QuadTree
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:ReactSeq
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:ReactSeqGrp
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:ReactSeqGrpOption
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Scene
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:SceneTblRow
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Sprite
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Subscriber
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:TblAnimRow
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:TblCameraRow
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:TblMobileRow
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:TblReactRow
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:TblSpriteRow
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Vector2
__init__	jb_objects.py	/^	def __init__(self):$/;"	m	class:Vector3
__init__	te.py	/^    def __init__(self):$/;"	m	class:Exit
__init__	te.py	/^    def __init__(self):$/;"	m	class:Layer
__init__	te.py	/^    def __init__(self):$/;"	m	class:SceneTableRow
__init__	te.py	/^    def __init__(self):$/;"	m	class:Sprite
args	init_dbs.py	/^args = sys.argv$/;"	v
args	te.py	/^args = sys.argv       $/;"	v
args	test.py	/^args = sys.argv$/;"	v
bookmark	te.py	/^bookmark = get_file_sz(DATA)$/;"	v
coll_grid	te.py	/^    coll_grid = [[[[0] * l.w] * l.h] * scene.num_layers]$/;"	v
collgrid_bytearray	te.py	/^collgrid_bytearray = bytearray()$/;"	v
comp_data	te.py	/^comp_data = z.compress(data_bytes)$/;"	v
compress_img_and_anim	img.py	/^def compress_img_and_anim(img, animated=False):$/;"	f
compress_sprite_imgs	img.py	/^def compress_sprite_imgs(directory, img_name):$/;"	f
contains	img.py	/^def contains(container, elem):$/;"	f
create_anim_map	img.py	/^def create_anim_map(img_name):$/;"	f
data_bytes	te.py	/^data_bytes = bytearray()$/;"	v
data_lines	test.py	/^data_lines = f.readlines()$/;"	v
db_files	init_dbs.py	/^db_files = ["media", "sprite", "scene", "audio", "img", "etc"]  # etc is for data that doesn't fit in any other category, like magic_spells. $/;"	v
db_fp	init_dbs.py	/^    db_fp = "%s\/db\/db_%s"%(game_dir, db_file)$/;"	v
default	te.py	/^    def default(self, o):$/;"	m	class:LemJSONEncoder
delete	mod.py	/^def delete(python_obj, game_name, attr_name=None):$/;"	f
elems_equal	img.py	/^def elems_equal(a, b):$/;"	f
f	gen_pyclasses.py	/^f = open("jb_objects.py", "w")$/;"	v
f	img_db.py	/^    f = open("last_proc_tm", "r")$/;"	v
f	img_db.py	/^    f = open("last_proc_tm", "w")$/;"	v
f	init_dbs.py	/^    f = open(db_fp, "w")$/;"	v
f	te.py	/^f = open("..\/games\/%s\/db.json"%(game_name), "a")$/;"	v
f	te.py	/^f = open(DATA, "ab")$/;"	v
f	test.py	/^f = open("testdata", "r")$/;"	v
f	test.py	/^f = open("testdata", "w")$/;"	v
final_ori	testdata.c	/^Uint8  *final_ori = {   0,    3,    2};$/;"	v
final_pos	testdata.c	/^Uint32 *final_pos = {1243, 1521, 1234};$/;"	v
flip_diag	img.py	/^def flip_diag(np_array):$/;"	f
flip_funcs	img.py	/^flip_funcs = {FLIP_NONE: flip_none, FLIP_UD: flip_ud, FLIP_LR: flip_lr, FLIP_DIAG: flip_diag}$/;"	v
flip_lr	img.py	/^flip_lr = np.fliplr$/;"	v
flip_none	img.py	/^def flip_none(np_array):$/;"	f
flip_ud	img.py	/^flip_ud = np.flipud$/;"	v
game_dir	init_dbs.py	/^game_dir = "..\/%s"%game_name$/;"	v
game_name	init_dbs.py	/^game_name = sys.argv[2]$/;"	v
game_name	te.py	/^game_name = args[1]$/;"	v
game_nm	img_db.py	/^game_nm = os.getcwd().split(SEP)[-3]  # ...\/ge\/games\/[GAME NAME]\/img\/sprite\/$/;"	v
get_color_palette	img.py	/^def get_color_palette(img):$/;"	f
get_file_sz	te.py	/^def get_file_sz(fp):$/;"	f
get_key_mapping	img.py	/^def get_key_mapping(fn):$/;"	f
get_key_mapping_str	img.py	/^def get_key_mapping_str(fn, underscore_psns):$/;"	f
get_keymap_psn	img.py	/^def  get_keymap_psn(filename):$/;"	f
gray_out_img	img.py	/^def gray_out_img(img, color_palette):$/;"	f
h	gen_pyclasses.py	/^h = p.CppHeader("..%sjb.h"%SEP)$/;"	v
idx_row_end	test.py	/^idx_row_end   = data_lines.index(END_ROW)$/;"	v
idx_row_start	test.py	/^idx_row_start = data_lines.index(START_ROW)$/;"	v
idx_tbl_end	test.py	/^idx_tbl_end   = data_lines.index(END_TBL)$/;"	v
idx_tbl_start	test.py	/^idx_tbl_start = data_lines.index(START_TBL)$/;"	v
img_nm	img_db.py	/^img_nm = src_file.split(".")[0]$/;"	v
img_type	img_db.py	/^img_type = os.getcwd().split(SEP)[-1] # ...\/ge\/games\/[GAME NAME]\/img\/[sprite | bg]\/$/;"	v
is_valid	utils.py	/^def is_valid(obj):$/;"	f
json_data	te.py	/^json_data = LemJSONEncoder.encode(strow)$/;"	v
last_mod_tm	img_db.py	/^    last_mod_tm = os.stat(".\/%s.bin"%(img_nm)).st_mtime$/;"	v
last_proc_tm	img_db.py	/^    last_proc_tm = f.read()$/;"	v
layer	te.py	/^    layer = Layer()$/;"	v
map_tiles	img.py	/^def map_tiles(img):$/;"	f
merge	mod.py	/^def merge(python_obj, game_name, attr_name=None):$/;"	f
mod	mod.py	/^def mod(mod_type, python_obj, game_name, attr_name=None):$/;"	f
posori_tbl	testdata.c	/^PosOriTblRow *posori_tbl = {$/;"	v
pwd	img_db.py	/^pwd = os.getcwd()$/;"	v
rank_elems	img.py	/^def rank_elems(array):$/;"	f
remove_dupe_frames	img.py	/^def remove_dupe_frames(anim_map, img):$/;"	f
rle	img.py	/^def rle(tile):$/;"	f
root	te.py	/^root = tree.getroot()$/;"	v
scene	te.py	/^    scene = SceneTableRow()$/;"	v
scene_dir	test.py	/^scene_dir = "..\/%s"%scene_name$/;"	v
scene_name	te.py	/^scene_name = args[2]$/;"	v
scene_name	test.py	/^scene_name = sys.argv[2]$/;"	v
sort_colors	img.py	/^def sort_colors(color_palette, brightness_ranks):$/;"	f
src_file	img_db.py	/^src_file = sys.argv[1]$/;"	v
sz	te.py	/^sz = 0$/;"	v
throw_underscore_error	img.py	/^def throw_underscore_error(fn):$/;"	f
tilemap_bytearray	te.py	/^tilemap_bytearray = bytearray()$/;"	v
town1_ori	testdata.c	/^Uint8  *town1_ori = {0,      3,  2,  1,     3,  1,  2};$/;"	v
town1_pos	testdata.c	/^Uint32 *town1_pos = {1543, 123, 12, 51, 61643, 23, 15};$/;"	v
tree	te.py	/^tree = ET.parse("..\/games\/%s\/scenes\/%s.tmx"%(game_name, scene_name))$/;"	v
val	gen_pyclasses.py	/^            val = "None"$/;"	v
val	gen_pyclasses.py	/^        val = 0$/;"	v
